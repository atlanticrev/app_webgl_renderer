{"version":3,"file":"WebGLRenderer.js","sourceRoot":"","sources":["WebGLRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["import Canvas from \"./Canvas.js\";\r\nimport SceneObject from \"./objects/SceneObject.js\";\r\nimport sceneGraph from \"./SceneGraph.js\";\r\n\r\nclass WebGLRenderer extends EventTarget {\r\n    private readonly _canvas: Canvas;\r\n    protected readonly _gl: WebGLRenderingContext;\r\n    private readonly _scene: Array<SceneObject>;\r\n    private _animationFrame: number;\r\n    // @todo Move to \"SceneManager\"\r\n    activeElement: SceneObject;\r\n\r\n    constructor () {\r\n        super();\r\n        this._canvas = new Canvas();\r\n        this._gl = this._canvas.getCtx('webgl') as WebGLRenderingContext;\r\n        this._scene = sceneGraph.map(object => new object.type(this._gl, object));\r\n        this._animationFrame = -1;\r\n        // @todo Move to \"SceneManager\"\r\n        this.activeElement = this._scene[0];\r\n        this._renderIteration = this._renderIteration.bind(this);\r\n        this.onPositionChange = this.onPositionChange.bind(this);\r\n        this.onRotationChange = this.onRotationChange.bind(this);\r\n        this.onScaleChange = this.onScaleChange.bind(this);\r\n    }\r\n\r\n    _setViewport () {\r\n        // This tells WebGL the (-1 <-> +1) clip space maps to\r\n        // (0 <-> gl.canvas.width) for x,\r\n        // (gl.canvas.height <-> 0) for y.\r\n        this._gl.viewport(0, 0, this._canvas.width, this._canvas.height);\r\n        this._gl.clearColor(0, 0, 0, 0);\r\n        this._gl.clear(this._gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    startRenderLoop () {\r\n        this.stopRenderLoop();\r\n        this._animationFrame = requestAnimationFrame(this._renderIteration);\r\n    }\r\n\r\n    stopRenderLoop () {\r\n        cancelAnimationFrame(this._animationFrame);\r\n    }\r\n\r\n    _renderIteration () {\r\n        this._render();\r\n        this._animationFrame = requestAnimationFrame(this._renderIteration);\r\n    }\r\n\r\n    _render () {\r\n        this._canvas.resize();\r\n        this._setViewport();\r\n        this._scene.forEach(object => object.render());\r\n    }\r\n\r\n    // @todo Move to \"SceneManager\"\r\n    onPositionChange (e: CustomEvent) {\r\n        const { x, y } = e.detail;\r\n        this.activeElement.setPosition(x, y);\r\n    }\r\n\r\n    // @todo Move to \"SceneManager\"\r\n    onRotationChange (e: CustomEvent) {\r\n        const { angle } = e.detail;\r\n        this.activeElement.setRotation(angle);\r\n    }\r\n\r\n    // @todo Move to \"SceneManager\"\r\n    onScaleChange (e: CustomEvent) {\r\n        const { scalar } = e.detail;\r\n        this.activeElement.setScale(scalar);\r\n    }\r\n}\r\n\r\nexport default WebGLRenderer;\r\n"]}