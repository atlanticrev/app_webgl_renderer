{"version":3,"file":"SceneGraph.js","sourceRoot":"","sources":["SceneGraph.ts"],"names":[],"mappings":"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","sourcesContent":["// import Square from \"./objects/Square.js\";\r\n// import squareVertexShader from \"./shaders/square_vert.glsl.js\";\r\n// import squareFragmentShader from \"./shaders/square_frag.glsl.js\";\r\n\r\nimport FLetter from \"./objects/FLetter.js\";\r\nimport fletterVertexShader from \"./shaders/fletter_vert.glsl.js\";\r\nimport fletterFragmentShader from \"./shaders/fletter_frag.glsl.js\";\r\n\r\nconst sceneGraph = [\r\n    {\r\n        type: FLetter,\r\n        properties: {\r\n            translation: [0, 0, -360],\r\n            scale: [1.5, 1.5, 1],\r\n            rotation: [180, 0, 0],\r\n        },\r\n        shaders: {\r\n            vertexShader: fletterVertexShader,\r\n            fragmentShader: fletterFragmentShader,\r\n        },\r\n        attributes: {\r\n            a_position: {\r\n                location: null,\r\n            },\r\n            a_color: {\r\n                location: null,\r\n            }\r\n        },\r\n        uniforms: {\r\n            u_position : {\r\n                location: null,\r\n                type: 'uniformMatrix4fv',\r\n                data: null\r\n            }\r\n        },\r\n        buffers: {\r\n            position_buffer: {\r\n                location: null,\r\n                data: new Float32Array([\r\n                    // left column front\r\n                    0,   0,  0,\r\n                    0, 150,  0,\r\n                    30,   0,  0,\r\n                    0, 150,  0,\r\n                    30, 150,  0,\r\n                    30,   0,  0,\r\n\r\n                    // top rung front\r\n                    30,   0,  0,\r\n                    30,  30,  0,\r\n                    100,   0,  0,\r\n                    30,  30,  0,\r\n                    100,  30,  0,\r\n                    100,   0,  0,\r\n\r\n                    // middle rung front\r\n                    30,  60,  0,\r\n                    30,  90,  0,\r\n                    67,  60,  0,\r\n                    30,  90,  0,\r\n                    67,  90,  0,\r\n                    67,  60,  0,\r\n\r\n                    // left column back\r\n                    0,   0,  30,\r\n                    30,   0,  30,\r\n                    0, 150,  30,\r\n                    0, 150,  30,\r\n                    30,   0,  30,\r\n                    30, 150,  30,\r\n\r\n                    // top rung back\r\n                    30,   0,  30,\r\n                    100,   0,  30,\r\n                    30,  30,  30,\r\n                    30,  30,  30,\r\n                    100,   0,  30,\r\n                    100,  30,  30,\r\n\r\n                    // middle rung back\r\n                    30,  60,  30,\r\n                    67,  60,  30,\r\n                    30,  90,  30,\r\n                    30,  90,  30,\r\n                    67,  60,  30,\r\n                    67,  90,  30,\r\n\r\n                    // top\r\n                    0,   0,   0,\r\n                    100,   0,   0,\r\n                    100,   0,  30,\r\n                    0,   0,   0,\r\n                    100,   0,  30,\r\n                    0,   0,  30,\r\n\r\n                    // top rung right\r\n                    100,   0,   0,\r\n                    100,  30,   0,\r\n                    100,  30,  30,\r\n                    100,   0,   0,\r\n                    100,  30,  30,\r\n                    100,   0,  30,\r\n\r\n                    // under top rung\r\n                    30,   30,   0,\r\n                    30,   30,  30,\r\n                    100,  30,  30,\r\n                    30,   30,   0,\r\n                    100,  30,  30,\r\n                    100,  30,   0,\r\n\r\n                    // between top rung and middle\r\n                    30,   30,   0,\r\n                    30,   60,  30,\r\n                    30,   30,  30,\r\n                    30,   30,   0,\r\n                    30,   60,   0,\r\n                    30,   60,  30,\r\n\r\n                    // top of middle rung\r\n                    30,   60,   0,\r\n                    67,   60,  30,\r\n                    30,   60,  30,\r\n                    30,   60,   0,\r\n                    67,   60,   0,\r\n                    67,   60,  30,\r\n\r\n                    // right of middle rung\r\n                    67,   60,   0,\r\n                    67,   90,  30,\r\n                    67,   60,  30,\r\n                    67,   60,   0,\r\n                    67,   90,   0,\r\n                    67,   90,  30,\r\n\r\n                    // bottom of middle rung.\r\n                    30,   90,   0,\r\n                    30,   90,  30,\r\n                    67,   90,  30,\r\n                    30,   90,   0,\r\n                    67,   90,  30,\r\n                    67,   90,   0,\r\n\r\n                    // right of bottom\r\n                    30,   90,   0,\r\n                    30,  150,  30,\r\n                    30,   90,  30,\r\n                    30,   90,   0,\r\n                    30,  150,   0,\r\n                    30,  150,  30,\r\n\r\n                    // bottom\r\n                    0,   150,   0,\r\n                    0,   150,  30,\r\n                    30,  150,  30,\r\n                    0,   150,   0,\r\n                    30,  150,  30,\r\n                    30,  150,   0,\r\n\r\n                    // left side\r\n                    0,   0,   0,\r\n                    0,   0,  30,\r\n                    0, 150,  30,\r\n                    0,   0,   0,\r\n                    0, 150,  30,\r\n                    0, 150,   0\r\n                ])\r\n            },\r\n            color_buffer : {\r\n                location: null,\r\n                data: new Uint8Array([\r\n                    // left column front\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n\r\n                    // top rung front\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n\r\n                    // middle rung front\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n                    200,  70, 120,\r\n\r\n                    // left column back\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n\r\n                    // top rung back\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n\r\n                    // middle rung back\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n                    80, 70, 200,\r\n\r\n                    // top\r\n                    70, 200, 210,\r\n                    70, 200, 210,\r\n                    70, 200, 210,\r\n                    70, 200, 210,\r\n                    70, 200, 210,\r\n                    70, 200, 210,\r\n\r\n                    // top rung right\r\n                    200, 200, 70,\r\n                    200, 200, 70,\r\n                    200, 200, 70,\r\n                    200, 200, 70,\r\n                    200, 200, 70,\r\n                    200, 200, 70,\r\n\r\n                    // under top rung\r\n                    210, 100, 70,\r\n                    210, 100, 70,\r\n                    210, 100, 70,\r\n                    210, 100, 70,\r\n                    210, 100, 70,\r\n                    210, 100, 70,\r\n\r\n                    // between top rung and middle\r\n                    210, 160, 70,\r\n                    210, 160, 70,\r\n                    210, 160, 70,\r\n                    210, 160, 70,\r\n                    210, 160, 70,\r\n                    210, 160, 70,\r\n\r\n                    // top of middle rung\r\n                    70, 180, 210,\r\n                    70, 180, 210,\r\n                    70, 180, 210,\r\n                    70, 180, 210,\r\n                    70, 180, 210,\r\n                    70, 180, 210,\r\n\r\n                    // right of middle rung\r\n                    100, 70, 210,\r\n                    100, 70, 210,\r\n                    100, 70, 210,\r\n                    100, 70, 210,\r\n                    100, 70, 210,\r\n                    100, 70, 210,\r\n\r\n                    // bottom of middle rung.\r\n                    76, 210, 100,\r\n                    76, 210, 100,\r\n                    76, 210, 100,\r\n                    76, 210, 100,\r\n                    76, 210, 100,\r\n                    76, 210, 100,\r\n\r\n                    // right of bottom\r\n                    140, 210, 80,\r\n                    140, 210, 80,\r\n                    140, 210, 80,\r\n                    140, 210, 80,\r\n                    140, 210, 80,\r\n                    140, 210, 80,\r\n\r\n                    // bottom\r\n                    90, 130, 110,\r\n                    90, 130, 110,\r\n                    90, 130, 110,\r\n                    90, 130, 110,\r\n                    90, 130, 110,\r\n                    90, 130, 110,\r\n\r\n                    // left side\r\n                    160, 160, 220,\r\n                    160, 160, 220,\r\n                    160, 160, 220,\r\n                    160, 160, 220,\r\n                    160, 160, 220,\r\n                    160, 160, 220\r\n                ])\r\n            }\r\n        }\r\n    },\r\n    // {\r\n    //     type: Square,\r\n    //     properties: {\r\n    //         translation: [300, 200, 0],\r\n    //         scale: [1, 1, 1],\r\n    //         rotation: [0, 0, 0],\r\n    //     },\r\n    //     shaders: {\r\n    //         vertexShader: squareVertexShader,\r\n    //         fragmentShader: squareFragmentShader,\r\n    //     },\r\n    //     attributes: {\r\n    //         a_position: {\r\n    //             location: null\r\n    //         }\r\n    //     },\r\n    //     uniforms: {\r\n    //         u_position : {\r\n    //             location: null,\r\n    //             type: 'uniformMatrix4fv',\r\n    //             data: null\r\n    //         }\r\n    //     },\r\n    //     buffers: {\r\n    //         position_buffer: {\r\n    //             location: null,\r\n    //             data: new Float32Array([\r\n    //                 0, 0, 0,\r\n    //                 0, 300, 0,\r\n    //                 300, 0, 0,\r\n    //                 300, 0, 0,\r\n    //                 0, 300, 0,\r\n    //                 300, 300, 0\r\n    //             ])\r\n    //         }\r\n    //     }\r\n    // }\r\n];\r\n\r\nexport default sceneGraph;\r\n"]}