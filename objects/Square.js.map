{"version":3,"file":"Square.js","sourceRoot":"","sources":["Square.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAC,IAAI,EAAC,MAAM,YAAY,CAAC;AAEhC,MAAM,MAAO,SAAQ,WAAW;IAC5B,YAAY,EAAyB,EAAE,OAAY;QAC/C,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,eAAe;IACf,aAAa;QACT,OAAO,IAAI,CAAC,WAAW,EAAE;YACrB,WAAW;aACV,iBAAiB,CACd,IAAI,IAAI,CACJ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EACpC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACd,CACJ;aACA,iBAAiB,CACd,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CACjC,CACJ;aACA,iBAAiB,CACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAC5C;aACA,iBAAiB,CACd,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAC3B,CACJ;aACA,iBAAiB,CACd,IAAI,CAAC,WAAW,CACZ,CAAC,GAAG,EACJ,CAAC,GAAG,EACJ,CAAC,CACJ,CACJ;aACA,YAAY,EAAE,CAAC;QAEpB,4BAA4B;QAC5B,uBAAuB;QACvB,4BAA4B;QAC5B,oBAAoB;QACpB,oBAAoB;QACpB,gBAAgB;QAChB,YAAY;QACZ,QAAQ;QACR,uBAAuB;QACvB,4BAA4B;QAC5B,wCAAwC;QACxC,wCAAwC;QACxC,uCAAuC;QACvC,YAAY;QACZ,QAAQ;QACR,uBAAuB;QACvB,oDAAoD;QACpD,QAAQ;QACR,uBAAuB;QACvB,4BAA4B;QAC5B,8CAA8C;QAC9C,8CAA8C;QAC9C,6CAA6C;QAC7C,YAAY;QACZ,QAAQ;QACR,kBAAkB;QAClB,uBAAuB;QACvB,oBAAoB;QACpB,kDAAkD;QAClD,oDAAoD;QACpD,0BAA0B;QAC1B,0BAA0B;QAC1B,YAAY;QACZ,QAAQ;QACR,uBAAuB;IAC3B,CAAC;CACJ;AAED,eAAe,MAAM,CAAC","sourcesContent":["import SceneObject from \"./SceneObject.js\";\r\nimport {Mat4} from \"../Math.js\";\r\n\r\nclass Square extends SceneObject {\r\n    constructor(gl: WebGLRenderingContext, options: any) {\r\n        super(gl, options);\r\n    }\r\n\r\n    // Every render\r\n    calcSRTMatrix () {\r\n        return Mat4.getIdentMat()\r\n            // Clipping\r\n            .premultiplyMatrix(\r\n                new Mat4(\r\n                    2 / this._gl.canvas.width, 0, 0 ,0,\r\n                    0, -2 / this._gl.canvas.height, 0, 0,\r\n                    0, 0, 1, 0,\r\n                    -1, 1, 0, 1\r\n                )\r\n            )\r\n            .premultiplyMatrix(\r\n                Mat4.getTransMat(\r\n                    this.properties.translation[0],\r\n                    this.properties.translation[1],\r\n                    this.properties.translation[2]\r\n                )\r\n            )\r\n            .premultiplyMatrix(\r\n                Mat4.getRotMatZ(this.properties.rotation)\r\n            )\r\n            .premultiplyMatrix(\r\n                Mat4.getScaleMat(\r\n                    this.properties.scale[0],\r\n                    this.properties.scale[1],\r\n                    this.properties.scale[2]\r\n                )\r\n            )\r\n            .premultiplyMatrix(\r\n                Mat4.getTransMat(\r\n                    -150,\r\n                    -150,\r\n                    0\r\n                )\r\n            )\r\n            .toTypedArray();\r\n\r\n        // return Mat4.getIdentMat()\r\n        //     .multiplyMatrix(\r\n        //         Mat4.getTransMat(\r\n        //             -150,\r\n        //             -150,\r\n        //             0\r\n        //         )\r\n        //     )\r\n        //     .multiplyMatrix(\r\n        //         Mat4.getScaleMat(\r\n        //             this.properties.scale[0],\r\n        //             this.properties.scale[1],\r\n        //             this.properties.scale[2]\r\n        //         )\r\n        //     )\r\n        //     .multiplyMatrix(\r\n        //         Mat4.getRotMatZ(this.properties.rotation)\r\n        //     )\r\n        //     .multiplyMatrix(\r\n        //         Mat4.getTransMat(\r\n        //             this.properties.translation[0],\r\n        //             this.properties.translation[1],\r\n        //             this.properties.translation[2]\r\n        //         )\r\n        //     )\r\n        //     // Clipping\r\n        //     .multiplyMatrix(\r\n        //         new Mat4(\r\n        //             2 / this._gl.canvas.width, 0, 0 ,0,\r\n        //             0, -2 / this._gl.canvas.height, 0, 0,\r\n        //             0, 0, 1, 0,\r\n        //             -1, 1, 0, 1\r\n        //         )\r\n        //     )\r\n        //     .toTypedArray();\r\n    }\r\n}\r\n\r\nexport default Square;\r\n"]}