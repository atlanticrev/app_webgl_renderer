{"version":3,"file":"Square.js","sourceRoot":"","sources":["Square.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAElC,MAAM,MAAO,SAAQ,WAAW;IAC5B,YAAY,EAAyB,EAAE,OAAY;QAC/C,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,eAAe;IACf,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CACvD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,QAAQ,EACvC;YACI,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACpB,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,CAAC;SACZ,CACJ,CAAC;IACN,CAAC;IAED,eAAe;IACf,aAAa;QACT,OAAO,IAAI,CAAC,WAAW,EAAE;YACrB,0BAA0B;aACzB,cAAc,CACX,IAAI,CAAC,WAAW,CACZ,CAAC,GAAG,EACJ,CAAC,GAAG,EACJ,CAAC,CACJ,CACJ;aACA,cAAc,CACX,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAC3B,CACJ;aACA,cAAc,CACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC/C;aACA,cAAc,CACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC/C;aACA,cAAc,CACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC/C;aACA,cAAc,CACX,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CACjC,CACJ;YACD,WAAW;aACV,cAAc,CACX,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CACnF;aACA,YAAY,EAAE,CAAC;IACxB,CAAC;CACJ;AAED,eAAe,MAAM,CAAC","sourcesContent":["import SceneObject from \"./SceneObject.js\";\r\nimport { Mat4 } from \"../Math.js\";\r\n\r\nclass Square extends SceneObject {\r\n    constructor(gl: WebGLRenderingContext, options: any) {\r\n        super(gl, options);\r\n    }\r\n\r\n    // Every render\r\n    setBuffers () {\r\n        this._buffers['position_buffer'].location.bindWithAttribute(\r\n            this._attributes['a_position'].location,\r\n            {\r\n                size: 3,\r\n                type: this._gl.FLOAT,\r\n                normalized: false,\r\n                stride: 0,\r\n                offset: 0\r\n            }\r\n        );\r\n    }\r\n\r\n    // Every render\r\n    calcSRTMatrix () {\r\n        return Mat4.getIdentMat()\r\n            // Change transform origin\r\n            .multiplyMatrix(\r\n                Mat4.getTransMat(\r\n                    -150,\r\n                    -150,\r\n                    0\r\n                )\r\n            )\r\n            .multiplyMatrix(\r\n                Mat4.getScaleMat(\r\n                    this.properties.scale[0],\r\n                    this.properties.scale[1],\r\n                    this.properties.scale[2]\r\n                )\r\n            )\r\n            .multiplyMatrix(\r\n                Mat4.getRotMatX(this.properties.rotation[0])\r\n            )\r\n            .multiplyMatrix(\r\n                Mat4.getRotMatY(this.properties.rotation[1])\r\n            )\r\n            .multiplyMatrix(\r\n                Mat4.getRotMatZ(this.properties.rotation[2])\r\n            )\r\n            .multiplyMatrix(\r\n                Mat4.getTransMat(\r\n                    this.properties.translation[0],\r\n                    this.properties.translation[1],\r\n                    this.properties.translation[2]\r\n                )\r\n            )\r\n            // Clipping\r\n            .multiplyMatrix(\r\n                Mat4.getOrthoMat(0, 0, this._gl.canvas.width, this._gl.canvas.height, 400, -400)\r\n            )\r\n            .toTypedArray();\r\n    }\r\n}\r\n\r\nexport default Square;\r\n"]}