{"version":3,"file":"SceneObject.js","sourceRoot":"","sources":["SceneObject.ts"],"names":[],"mappings":"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","sourcesContent":["import { createProgramFromShaders } from \"../Utils.js\";\r\nimport { Buffer } from \"../WebGLBuffer.js\";\r\nimport { Mat4 } from \"../Math.js\";\r\n\r\nclass SceneObject {\r\n    protected readonly _gl: WebGLRenderingContext;\r\n    protected readonly _shaderProgram: WebGLProgram;\r\n    protected readonly _attributes: {[attribute: string]: any};\r\n    protected readonly _globalUniforms: {[uniforms: string]: any};\r\n    protected readonly _uniforms: {[uniform: string]: any};\r\n    protected readonly _buffers: {[buffer: string]: any};\r\n    properties: {[name: string]: any};\r\n\r\n    constructor (gl: WebGLRenderingContext, options: any) {\r\n        this._gl = gl;\r\n        this._shaderProgram = createProgramFromShaders(this._gl, options.shaders.vertexShader, options.shaders.fragmentShader) as WebGLProgram;\r\n        this._attributes = options.attributes;\r\n        this._globalUniforms = {\r\n            u_resolution: {\r\n                location: null\r\n            }\r\n        };\r\n        this._uniforms = options.uniforms;\r\n        this._buffers = options.buffers;\r\n        this.properties = {\r\n            scale: [\r\n                options.properties.scale[0] || 1,\r\n                options.properties.scale[1] || 1,\r\n                options.properties.scale[2] || 1,\r\n            ],\r\n            rotation: options.properties.rotation || 0,\r\n            translation: [\r\n                options.properties.translation[0] || 0,\r\n                options.properties.translation[1] || 0,\r\n                options.properties.translation[2] || 0\r\n            ]\r\n        };\r\n        this.init();\r\n    }\r\n\r\n    init () {\r\n        // Attributes\r\n        for (let attribute of Object.keys(this._attributes)) {\r\n            this._attributes[attribute].location = this._gl.getAttribLocation(this._shaderProgram, attribute);\r\n        }\r\n        // Uniforms\r\n        for (let uniform of Object.keys(this._globalUniforms)) {\r\n            this._globalUniforms[uniform].location = this._gl.getUniformLocation(this._shaderProgram, uniform);\r\n        }\r\n        for (let uniform of Object.keys(this._uniforms)) {\r\n            this._uniforms[uniform].location = this._gl.getUniformLocation(this._shaderProgram, uniform);\r\n        }\r\n        // Buffers\r\n        for (let bufferName of Object.keys(this._buffers)) {\r\n            this._buffers[bufferName].location = new Buffer(this._gl, this._buffers[bufferName].data);\r\n        }\r\n    }\r\n\r\n    // Every render\r\n    render () {\r\n        this.calcAnimation();\r\n        this._gl.useProgram(this._shaderProgram);\r\n        this.setUniforms();\r\n        this.setBuffers();\r\n        this.drawCall();\r\n    }\r\n\r\n    // Every render\r\n    setUniforms () {\r\n        this._gl.uniform2fv(this._globalUniforms['u_resolution'].location, [this._gl.canvas.width, this._gl.canvas.height]);\r\n        this._gl.uniformMatrix4fv(this._uniforms['u_position'].location, false, this.calcSRTMatrix());\r\n    }\r\n\r\n    // Every render\r\n    setBuffers () {\r\n        this._buffers['position_buffer'].location.bindWithAttribute(\r\n            this._attributes['a_position'].location,\r\n            {\r\n                size: 2,\r\n                type: this._gl.FLOAT,\r\n                normalized: false,\r\n                stride: 0,\r\n                offset: 0\r\n            }\r\n        );\r\n    }\r\n\r\n    // Every render\r\n    drawCall () {\r\n        this._gl.drawArrays(this._gl.TRIANGLES, 0, this._buffers['position_buffer'].location.getLength());\r\n    }\r\n\r\n    calcAnimation () {}\r\n\r\n    // Every render\r\n    calcSRTMatrix () {\r\n        return Mat4.getIdentMat()\r\n            .multiplyMatrix(Mat4.getScaleMat(this.properties.scale[0], this.properties.scale[1], this.properties.scale[2]))\r\n            .multiplyMatrix(Mat4.getRotMatZ(this.properties.rotation))\r\n            .multiplyMatrix(Mat4.getTransMat(this.properties.translation[0], this.properties.translation[1], this.properties.translation[2]))\r\n            .toTypedArray();\r\n    }\r\n\r\n    // Every input change\r\n    setPosition (x?: string, y?: string) {\r\n        if (x) {\r\n            this.properties.translation[0] = x;\r\n        } else if (y) {\r\n            this.properties.translation[1] = y;\r\n        }\r\n    }\r\n\r\n    // Every input change\r\n    setRotation (angle: string) {\r\n        this.properties.rotation = angle;\r\n    }\r\n\r\n    // Every input change\r\n    setScale (scalar: string) {\r\n        this.properties.scale[0] = scalar;\r\n        this.properties.scale[1] = scalar;\r\n        this.properties.scale[2] = scalar;\r\n    }\r\n}\r\n\r\nexport default SceneObject;\r\n"]}