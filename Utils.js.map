{"version":3,"file":"Utils.js","sourceRoot":"","sources":["Utils.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,wBAAwB,CAAE,EAAyB,EAAE,kBAA0B,EAAE,oBAA4B;IACzH,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;IAClE,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC;IACtE,IAAI,EAAE,IAAI,EAAE,EAAE;QACV,OAAO,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KACpC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,YAAY,CAAE,EAAyB,EAAE,IAAY,EAAE,YAAoB;IAChF,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,MAAM,EAAE;QACR,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACtC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACzB,MAAM,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,OAAO;YACP,OAAO,MAAM,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;KACf;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,aAAa,CAAE,EAAyB,EAAE,YAAyB,EAAE,cAA2B;IACrG,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;IACnC,IAAI,OAAO,EAAE;QACT,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACvC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACzC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxB,MAAM,OAAO,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;QAChE,IAAI,OAAO;YACP,OAAO,OAAO,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","sourcesContent":["export function createProgramFromShaders (gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) {\r\n    const vs = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n    const fs = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n    if (vs && fs) {\r\n        return createProgram(gl, vs, fs);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction createShader (gl: WebGLRenderingContext, type: GLenum, shaderSource: string) {\r\n    const shader = gl.createShader(type);\r\n    if (shader) {\r\n        gl.shaderSource(shader, shaderSource);\r\n        gl.compileShader(shader);\r\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (success)\r\n            return shader;\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction createProgram (gl: WebGLRenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) {\r\n    const program = gl.createProgram();\r\n    if (program) {\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n        if (success)\r\n            return program;\r\n        console.log(gl.getProgramInfoLog(program));\r\n        gl.deleteProgram(program);\r\n        return null;\r\n    }\r\n    return null;\r\n}\r\n"]}